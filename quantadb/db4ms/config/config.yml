quantadb:
  version: "1.0"
  environment: "production"

  # Server configuration
  server:
    host: 0.0.0.0
    port: 8080
    api_prefix: /api/v1
    max_request_size_mb: 20
    enable_cors: true

  # Database engine connections
  databases:
    postgres:
      url: jdbc:postgresql://localhost:5432/
      default_user: quantadb
      default_password: secret
      per_bucket: true
      pool:
        max_connections: 20
        min_idle: 5
        max_lifetime: 1800000

    mongodb:
      uri: mongodb://localhost:27017/
      default_database: quantadb
      per_bucket: true
      pool:
        max_connections: 100

    neo4j:
      uri: bolt://localhost:7687
      user: neo4j
      password: secret
      per_bucket: true

    influxdb:
      url: http://localhost:8086
      org: quantadb
      bucket_prefix: metrics_
      token: secret-token
      per_bucket: true

  schema:
    storage:
      type: memory  # Options: postgres | mongodb | file | memory 
      postgres:
        database: quantadb_meta
        schema_table: qdb_schemas
        changelog_table: qdb_schema_changelog
        auto_migrate: true
      mongodb:
        database: quantadb_meta
        collection: schemas
      file:
        directory: ./schemas/
        format: yaml  # Options: json, yaml
      memory:
        preload: true  # Used for dev/testing only
        preload_sources:
          - ./schemas/example-bucket.yaml

    # Schema versioning and evolution
    versioning:
      enabled: true
      strategy: semantic  # Options: semantic | timestamp | incremental
      allow_backward_compatible_changes: true
      enforce_validation: true
      audit_log: true

    # How schema changes are handled in runtime
    live_reload:
      enabled: true
      poll_interval_seconds: 10
      broadcast_changes: true  # Notify running services via internal events

    # Access Control for Schema Changes
    access_control:
      allow_dynamic_modification: false
      require_admin_token: true

    # Schema Indexing & Metadata Caching
    indexing:
      enabled: true
      backend: redis
      redis_url: redis://localhost:6379
      ttl_seconds: 300

  # Transaction coordinator
  transaction:
    enabled: true
    timeout_seconds: 15
    retry_attempts: 3
    consistency: strong
    isolation_level: serializable
    distributed_strategy: two_phase_commit

  # Query engine
  query_engine:
    language: QDL  # Quanta Definition Language
    validate_schema: true
    optimization:
      enabled: true
      cache_execution_plan: true
      join_reorder: true

  # Security and authentication
  security:
    jwt_secret: super secure key
    enable_tls: true
    rate_limiting:
      enabled: true
      max_requests_per_minute: 1000
    api_keys:
      enabled: true

  # Logging and monitoring
  logging:
    level: INFO
    format: json
    output: stdout

  metrics:
    enabled: true
    exporter: prometheus
    endpoint: /metrics

  # Caching layer
  cache:
    enabled: true
    backend: redis
    redis_url: redis://localhost:6379
    ttl_seconds: 300

  # Plugin system
  plugins:
    enabled: true
    directories:
      - plugins/
    auto_reload: false

  # Developer tools
  playground:
    enabled: true
    ui_host: http://localhost:3000
    read_only: false

  # Backup and replication
  replication:
    enabled: true
    strategy: async
    targets:
      - name: backup-server
        type: s3
        endpoint: https://s3.example.com
        bucket: quantadb-backups
        access_key: ""
        secret_key: secret...

  # System health checks
  health:
    enabled: true
    check_interval_seconds: 30
    critical_services:
      - postgres
      - mongodb
      - neo4j
      - influxdb
